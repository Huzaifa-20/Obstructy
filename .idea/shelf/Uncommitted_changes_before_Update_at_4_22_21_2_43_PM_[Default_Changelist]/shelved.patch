Index: app/src/main/java/com/huzaifa/obstructy/EditVideo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.huzaifa.obstructy;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AlertDialog;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.lifecycle.Observer;\n\nimport android.app.Activity;\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.content.ServiceConnection;\nimport android.content.pm.PackageInfo;\nimport android.content.pm.PackageManager;\nimport android.content.pm.Signature;\nimport android.database.Cursor;\nimport android.graphics.Color;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.media.MediaPlayer;\nimport android.media.MediaScannerConnection;\nimport android.net.Uri;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.os.CountDownTimer;\nimport android.os.Environment;\nimport android.os.Handler;\nimport android.os.IBinder;\nimport android.provider.MediaStore;\nimport android.text.InputType;\nimport android.util.Base64;\nimport android.util.Log;\nimport android.view.Gravity;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.MediaController;\nimport android.widget.RelativeLayout;\nimport android.widget.SeekBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\nimport android.widget.VideoView;\n\nimport com.dinuscxj.progressbar.CircleProgressBar;\nimport com.facebook.CallbackManager;\nimport com.facebook.FacebookSdk;\nimport com.facebook.share.model.ShareVideo;\nimport com.facebook.share.model.ShareVideoContent;\nimport com.facebook.share.widget.ShareDialog;\nimport com.github.hiteshsondhi88.libffmpeg.ExecuteBinaryResponseHandler;\nimport com.github.hiteshsondhi88.libffmpeg.FFmpeg;\nimport com.github.hiteshsondhi88.libffmpeg.LoadBinaryResponseHandler;\nimport com.github.hiteshsondhi88.libffmpeg.exceptions.FFmpegCommandAlreadyRunningException;\nimport com.github.hiteshsondhi88.libffmpeg.exceptions.FFmpegNotSupportedException;\nimport com.google.android.material.bottomsheet.BottomSheetBehavior;\n\nimport org.florescu.android.rangeseekbar.RangeSeekBar;\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.DataInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.MalformedURLException;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.Locale;\nimport java.util.StringTokenizer;\n\nimport okhttp3.Call;\nimport okhttp3.Callback;\nimport okhttp3.MediaType;\nimport okhttp3.MultipartBody;\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.RequestBody;\nimport okhttp3.Response;\n\nimport static com.huzaifa.obstructy.LoadVideo.getPath;\n\npublic class EditVideo extends AppCompatActivity {\n\n    //<=================Progress=================>//\n    CircleProgressBar progress;\n    ServiceConnection myConn;\n    MyProgressService myServe;\n    //<------------------------------------------>//\n\n\n    //<=================TRIM SHEET VARIABLES=================>//\n    TextView startTrim, stopTrim;\n    ImageButton trimDone;\n    ImageButton trimClose;\n    RangeSeekBar seek;\n    //<------------------------------------------>//\n\n\n    //<=================SAVE SHEET VARIABLES=================>//\n    ImageButton saveDone, saveClose;\n    EditText saveFileName;\n    //<------------------------------------------>//\n\n\n    //<=================SAVING VARIABLES=================>//\n    int dur;\n    String filePrefix;\n    static File _dest;\n    //<------------------------------------------>//\n\n    //<=================MUSIC VARIABLES=================>//\n    MediaPlayer soundCtrlr;\n    ImageButton musicDone, musicClose;\n    ImageButton musicPlay, chooseMusicFile;\n    TextView musicFileName;\n    //<------------------------------------------>//\n\n\n\n    RelativeLayout trimPopup, musicpopup,savePopup;\n    BottomSheetBehavior bsheetTrim, bsheetMusic,bsheetSave;\n    String auFilePath, dest;\n    String [] cmd;\n\n\n    //<=================EDIT VIDEO LAYOUT VARIABLES=================>//\n    private ImageButton removeObstruction;\n    private ImageButton extractFrame;\n    private ImageButton addFilter;\n    private ImageButton addMusic;\n    private ImageButton trimVideo;\n    private ImageButton saveVideo;\n    private ImageButton shareVideo;\n    static String selectedVideoPath;\n    VideoView videoView;\n    MediaController mediaController;\n    //<------------------------------------------>//\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        FacebookSdk.sdkInitialize(this.getApplicationContext());    //FOR FACEBOOK SHARING\n        setContentView(R.layout.activity_edit_video);\n\n        filePrefix=\"\";\n\n        //<==================FOR FACEBOOK SHARING=================>//\n        printKeyHash();\n        CallbackManager cbm=CallbackManager.Factory.create();\n        final ShareDialog shareDialog=new ShareDialog(this);\n\n        selectedVideoPath=getIntent().getStringExtra(\"videoPath\");\n        setTrimViews();\n        setSaveViews();\n        setMusicViews();\n        assignSheetViews();\n        setVideoView();\n        assignEditViews();\n\n        addMusic.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                bsheetMusic.setState(BottomSheetBehavior.STATE_EXPANDED);\n                getDest();\n                setMusicListeners();\n            }\n        });\n\n        saveVideo.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                bsheetSave.setState(BottomSheetBehavior.STATE_EXPANDED);\n                setSaveListeners();\n            }\n        });\n\n        trimVideo.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                bsheetTrim.setState(BottomSheetBehavior.STATE_EXPANDED);\n                setTrimListeners();\n            }\n        });\n\n\n        addFilter.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                bsheetMusic.setState(BottomSheetBehavior.STATE_EXPANDED);\n            }\n        });\n\n        shareVideo.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                final AlertDialog.Builder alert=new AlertDialog.Builder(EditVideo.this);\n                View mView=getLayoutInflater().inflate(R.layout.share_dialogue,null);\n\n\n                ImageView whatsapp_icon=mView.findViewById(R.id.whatsapp_icon);\n                ImageView twitter_icon=mView.findViewById(R.id.twitter_icon);\n                ImageView facebook_icon=mView.findViewById(R.id.facebook_icon);\n                ImageView instagram_icon=mView.findViewById(R.id.instagram_icon);\n\n                alert.setView(mView);\n\n                final AlertDialog alertDialog=alert.create();\n                alertDialog.setCanceledOnTouchOutside(false);\n\n                whatsapp_icon.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View view) {\n                        Intent intent = getPackageManager().getLaunchIntentForPackage(\"com.whatsapp\");\n                        if (intent != null)\n                        {\n                            Uri shareBody=Uri.parse(selectedVideoPath);\n                            Intent shareIntent = new Intent();\n                            shareIntent.setAction(Intent.ACTION_SEND);\n                            shareIntent.setPackage(\"com.whatsapp\");\n                            shareIntent.putExtra(Intent.EXTRA_STREAM, shareBody);\n                            shareIntent.setType(\"video/mp4\");\n                            startActivity(shareIntent);\n                        }\n                        else\n                        {\n                            intent = new Intent(Intent.ACTION_VIEW);\n                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                            intent.setData(Uri.parse(\"market://details?id=\"+\"com.instagram.android\"));\n                            startActivity(intent);\n                        }\n                        alertDialog.dismiss();\n                    }\n                });\n\n                twitter_icon.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View view) {\n                        Intent intent = getPackageManager().getLaunchIntentForPackage(\"com.twitter.android\");\n                        if (intent != null)\n                        {\n                            Uri shareBody=Uri.parse(selectedVideoPath);\n                            Intent shareIntent = new Intent();\n                            shareIntent.setAction(Intent.ACTION_SEND);\n                            shareIntent.setPackage(\"com.twitter.android\");\n                            shareIntent.putExtra(Intent.EXTRA_STREAM, shareBody);\n                            shareIntent.setType(\"video/mp4\");\n                            startActivity(shareIntent);\n                        }\n                        else\n                        {\n                            intent = new Intent(Intent.ACTION_VIEW);\n                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                            intent.setData(Uri.parse(\"market://details?id=\"+\"com.instagram.android\"));\n                            startActivity(intent);\n                        }\n                        alertDialog.dismiss();\n                    }\n                });\n\n                facebook_icon.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View view) {\n                        //for facebook sharing//\n                        LoadVideo.videoFB=new ShareVideo.Builder()\n                                .setLocalUrl(LoadVideo.uri)\n                                .build();\n                        LoadVideo.videoContentFB=new ShareVideoContent.Builder()\n                                .setContentTitle(\"this is title\")\n                                .setContentDescription(\"this is description\")\n                                .setVideo(LoadVideo.videoFB)\n                                .build();\n                        if(shareDialog.canShow(ShareVideoContent.class))\n                            shareDialog.show(LoadVideo.videoContentFB);\n                        alertDialog.dismiss();\n                    }\n                });\n\n                instagram_icon.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View view) {\n                        Intent intent = getPackageManager().getLaunchIntentForPackage(\"com.instagram.android\");\n                        if (intent != null)\n                        {\n                            Uri shareBody=Uri.parse(selectedVideoPath);\n                            Intent shareIntent = new Intent();\n                            shareIntent.setAction(Intent.ACTION_SEND);\n                            shareIntent.setPackage(\"com.instagram.android\");\n                            shareIntent.putExtra(Intent.EXTRA_STREAM, shareBody);\n                            shareIntent.setType(\"video/mp4\");\n                            startActivity(shareIntent);\n                        }\n                        else\n                        {\n                            intent = new Intent(Intent.ACTION_VIEW);\n                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                            intent.setData(Uri.parse(\"market://details?id=\"+\"com.instagram.android\"));\n                            startActivity(intent);\n                        }\n                        alertDialog.dismiss();\n                    }\n                });\n\n                alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\n                alertDialog.show();\n            }\n        });\n\n        removeObstruction.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                String postUrl= \"http://192.168.100.34:5000/\";\n\n                ByteArrayOutputStream stream = new ByteArrayOutputStream();\n                try {\n                    FileInputStream fis = new FileInputStream(new File(selectedVideoPath));\n                    byte[] buf = new byte[1024];\n                    int n;\n                    while (-1 != (n = fis.read(buf)))\n                        stream.write(buf, 0, n);\n\n                    byte[] byteArray = stream.toByteArray();\n\n                    RequestBody postBodyImage = new MultipartBody.Builder()\n                            .setType(MultipartBody.FORM)\n                            .addFormDataPart(\"video\", \"videoClip.mp4\", RequestBody.create(MediaType.parse(\"video/mp4\"), byteArray))\n                            .build();\n\n                    Toast.makeText(EditVideo.this, \"Uploading To Server\",Toast.LENGTH_LONG).show();\n\n                    postRequest(postUrl, postBodyImage);\n                } catch (FileNotFoundException e) {\n                    e.printStackTrace();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n\n    }\n\n    private void setSaveListeners()\n    {\n        saveDone.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                saveVideo();\n            }\n        });\n\n        saveClose.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                bsheetSave.setState(BottomSheetBehavior.STATE_HIDDEN);\n            }\n        });\n    }\n\n\n    private void setMusicViews()\n    {\n        soundCtrlr=new MediaPlayer();\n        musicDone=findViewById(R.id.done_icon_musicSheet);\n        musicClose=findViewById(R.id.cross_icon_musicSheet);\n        musicPlay=findViewById(R.id.musicPlayPause);\n        chooseMusicFile=findViewById(R.id.musicChange);\n        musicFileName=findViewById(R.id.musicFile);\n    }\n\n    private void setSaveViews()\n    {\n        saveDone=findViewById(R.id.done_icon_saveSheet);\n        saveClose=findViewById(R.id.cross_icon_saveSheet);\n        saveFileName=findViewById(R.id.saveFileName_saveSheet);\n    }\n\n    private void assignSheetViews()\n    {\n        trimPopup=findViewById(R.id.trim_bottom_sheet_dialogue);\n        bsheetTrim= BottomSheetBehavior.from(trimPopup);\n        bsheetTrim.setState(BottomSheetBehavior.STATE_HIDDEN);\n\n        musicpopup=findViewById(R.id.musicpopup);\n        bsheetMusic=BottomSheetBehavior.from(musicpopup);\n        bsheetMusic.setState(BottomSheetBehavior.STATE_HIDDEN);\n\n        savePopup=findViewById(R.id.saveBottomSheet);\n        bsheetSave= BottomSheetBehavior.from(savePopup);\n        bsheetSave.setState(BottomSheetBehavior.STATE_HIDDEN);\n    }\n\n    private void assignEditViews()\n    {\n        removeObstruction=findViewById(R.id.removeObstructionOption);\n        extractFrame=findViewById(R.id.extractFrameOption);\n        addFilter=findViewById(R.id.addFilterOption);\n        addMusic=findViewById(R.id.addMusicOption);\n        trimVideo=findViewById(R.id.trimOption);\n        saveVideo=findViewById(R.id.saveOption);\n        shareVideo=findViewById(R.id.shareOption);\n    }\n\n    private void setMusicListeners()\n    {\n        soundCtrlr.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {\n            @Override\n            public void onPrepared(MediaPlayer mp) {\n                Log.d(\"sound\", \"onPrepared: \"+soundCtrlr.getDuration());\n                soundCtrlr.start();\n            }\n        });\n\n        musicClose.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // Stop Music If Playing\n                if (soundCtrlr.isPlaying()) {\n                    soundCtrlr.pause();\n                    findViewById(R.id.musicPlayPause).setBackgroundResource(R.drawable.ic_music_play);\n                }\n                bsheetMusic.setState(BottomSheetBehavior.STATE_HIDDEN);\n            }\n        });\n\n        musicDone.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // Stop Music If Playing\n                if (soundCtrlr.isPlaying()) {\n                    soundCtrlr.pause();\n                    findViewById(R.id.musicPlayPause).setBackgroundResource(R.drawable.ic_music_play);\n                }\n\n                if (musicFileName.getText().equals(\"No File Selected\"))\n                {\n                    Toast.makeText(EditVideo.this, \"Choose an audio file\", Toast.LENGTH_SHORT).show();\n                }\n\n                else {\n                    addAudio();\n                    bsheetMusic.setState(BottomSheetBehavior.STATE_HIDDEN);\n                    initiateTask();\n                }\n            }\n        });\n\n        chooseMusicFile.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // Stop Music If Playing\n                if (soundCtrlr.isPlaying()) {\n                    soundCtrlr.pause();\n                    findViewById(R.id.musicPlayPause).setBackgroundResource(R.drawable.ic_music_play);\n                }\n                selectAudioFile();\n            }\n        });\n\n        musicPlay.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (soundCtrlr!=null){\n                    if (soundCtrlr.isPlaying()) {\n                        soundCtrlr.pause();\n                        findViewById(R.id.musicPlayPause).setBackgroundResource(R.drawable.ic_music_play);\n                    }\n                    else {\n                        soundCtrlr.start();\n                        findViewById(R.id.musicPlayPause).setBackgroundResource(R.drawable.ic_music_pause);\n                    }\n                }\n                else{\n                    Toast.makeText(EditVideo.this,\n                            \"Please select an audio file first\",\n                            Toast.LENGTH_SHORT).show();\n                }\n            }\n        });\n    }\n\n\n    private void setTrimListeners()\n    {\n        trimDone.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                trimVideo(seek.getSelectedMinValue().intValue()*1000,seek.getSelectedMaxValue().intValue()*1000, \"\");\n                //INITIATE TRIMMING TASK//\n                bsheetTrim.setState(BottomSheetBehavior.STATE_HIDDEN);\n                initiateTask();\n            }\n        });\n\n        trimClose.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                bsheetTrim.setState(BottomSheetBehavior.STATE_HIDDEN);\n            }\n        });\n    }\n\n    private void initiateTask()\n    {\n        //<======================================SETTING PROGRESS CIRCLE AND CALLING SERVICE FOR TRIMMING===================================>//\n        progress=findViewById(R.id.prog_editVideo);\n        progress.setMax(100);\n\n        if (_dest==null)\n            manageDestNDirs();\n        String path=_dest.getAbsolutePath();\n\n        final Intent myServiceInt=new Intent(EditVideo.this, MyProgressService.class);\n        myServiceInt.putExtra(\"dur\",  dur);\n        myServiceInt.putExtra(\"cmd\", cmd);\n        myServiceInt.putExtra(\"dest\", path);\n        startService(myServiceInt);\n\n        myConn=new ServiceConnection() {\n            @Override\n            public void onServiceConnected(ComponentName componentName, IBinder iBinder) {\n                MyProgressService.LocalBinder bi= (MyProgressService.LocalBinder)iBinder;\n                myServe=bi.getServiceInstance();\n                myServe.registerClient(getParent());\n\n                final Observer<Integer> resuObsv=new androidx.lifecycle.Observer<Integer>(){\n\n                    @Override\n                    public void onChanged(Integer integer) {\n                        int resu=integer;\n                        progress.setVisibility(View.VISIBLE);\n\n                        if (resu<100){\n                            progress.setProgress(resu);\n                        }\n\n                        if (resu>=100)\n                        {\n                            progress.setProgress(100);\n                            stopService(myServiceInt);\n\n                            selectedVideoPath=_dest.getAbsolutePath();\n                            LoadVideo.uri= Uri.parse(EditVideo.selectedVideoPath);\n                            progress.setVisibility(View.INVISIBLE);\n\n                            String tName=\"\";\n\n                            if (cmd[0].equals(\"-i\")){\n                                tName=\"Music Added Successfully\";\n                            }\n                            else{\n                                tName=\"Video Cropped Successfully\";\n                            }\n\n                            Toast.makeText(EditVideo.this, tName, Toast.LENGTH_SHORT).show();\n                            setVideoView();\n                        }\n                    }\n                };\n                myServe.getPctg().observe(EditVideo.this, (androidx.lifecycle.Observer<? super Integer>) resuObsv);\n            }\n            @Override\n            public void onServiceDisconnected(ComponentName componentName)\n            {    }\n        };\n        bindService(myServiceInt, myConn, Context.BIND_AUTO_CREATE);\n        //<=================================================================================================================================>//\n\n    }\n\n    private void setTrimViews() {\n        startTrim=findViewById(R.id.startTV_trimSheet);\n        stopTrim=findViewById(R.id.stopTV_trimSheet);\n        seek=findViewById(R.id.seek_trimSheet);\n        trimDone=findViewById(R.id.done_icon_trimSheet);\n        trimClose=findViewById(R.id.cross_icon_trimSheet);\n    }\n\n    private void setVideoView() {\n        videoView=findViewById(R.id.videoView);\n        videoView.setVideoPath(selectedVideoPath);\n        mediaController=new MediaController(this);\n        mediaController.setAnchorView(videoView);\n        videoView.setMediaController(mediaController);\n        videoView.seekTo( 1 );\n        videoView.start();\n\n        //<==================================>//\n        videoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {\n            @Override\n            public void onPrepared(MediaPlayer mediaPlayer)\n            {\n                dur=videoView.getDuration()/1000;\n                Log.d(\"dur\", \"onPrepared: \"+dur);\n                startTrim.setText(getFormattedTime(0));\n                stopTrim.setText(getFormattedTime(dur));\n                //mediaPlayer.setLooping(true);\n                seek.setRangeValues(0, dur);\n                seek.setSelectedMaxValue(dur);\n                seek.setSelectedMinValue(0);\n                seek.setEnabled(true);\n                seek.setOnRangeSeekBarChangeListener(new RangeSeekBar.OnRangeSeekBarChangeListener() {\n                    @Override\n                    public void onRangeSeekBarValuesChanged(RangeSeekBar bar, Object minValue, Object maxValue) {\n                        videoView.seekTo((int)minValue*1000);\n                        startTrim.setText(getFormattedTime((int)bar.getSelectedMinValue()));\n                        stopTrim.setText(getFormattedTime((int)bar.getSelectedMaxValue()));\n                    }\n                });\n\n                Handler handler=new Handler();\n                handler.postDelayed(new Runnable() {\n                    @Override\n                    public void run() {\n                        if (videoView.getCurrentPosition()>=seek.getSelectedMaxValue().intValue()*1000)\n                        {\n                            videoView.seekTo(seek.getSelectedMinValue().intValue()*1000);\n                        }\n                    }\n                },1000);\n            }\n        });\n        videoView.setOnErrorListener(new MediaPlayer.OnErrorListener() {\n            @Override\n            public boolean onError(MediaPlayer mp, int what, int extra) {\n                Log.d(\"video\", \"setOnErrorListener \");\n                return true;\n            }\n        });\n    }\n\n    private void printKeyHash() {\n        try\n        {\n            PackageInfo info=getPackageManager().getPackageInfo(\"com.huzaifa.obstructy\", PackageManager.GET_SIGNATURES);\n            for(Signature signature: info.signatures)\n            {\n                MessageDigest md=MessageDigest.getInstance(\"SHA\");\n                md.update(signature.toByteArray());\n                Log.d(\"KeyHash\", Base64.encodeToString(md.digest(),Base64.DEFAULT));\n            }\n        }\n        catch (PackageManager.NameNotFoundException e)\n        {\n            e.printStackTrace();\n        }\n        catch (NoSuchAlgorithmException e)\n        {\n            e.printStackTrace();\n        }\n    }\n\n    void postRequest(String postUrl, RequestBody postBody) {\n\n        OkHttpClient client = new OkHttpClient();\n\n        Request request = new Request.Builder()\n                .url(postUrl)\n                .post(postBody)\n                .build();\n\n        client.newCall(request).enqueue(new Callback() {\n            @Override\n            public void onFailure(Call call, IOException e) {\n                // Cancel the post on failure.\n                call.cancel();\n\n                // In order to access the TextView inside the UI thread, the code is executed inside runOnUiThread()\n                runOnUiThread(new Runnable() {\n                    @Override\n                    public void run() {\n                        Toast.makeText(EditVideo.this, \"Uploading Failed\",Toast.LENGTH_LONG).show();\n                    }\n                });\n            }\n\n            @Override\n            public void onResponse(Call call, final Response response) throws IOException {\n                // In order to access the TextView inside the UI thread, the code is executed inside runOnUiThread()\n                runOnUiThread(new Runnable() {\n                    @Override\n                    public void run() {\n                        try {\n                            Toast.makeText(EditVideo.this, response.body().string(),Toast.LENGTH_LONG).show();\n                        } catch (IOException e) {\n                            e.printStackTrace();\n                        }\n                    }\n                });\n            }\n        });\n    }\n\n    /** Create a file Uri for saving an image or video */\n    private static Uri getOutputMediaFileUri(){\n        return Uri.fromFile(getOutputMediaFile());\n    }\n\n    /** Create a File for saving an image or video */\n    @Nullable\n    private static File getOutputMediaFile(){\n        // To be safe, you should check that the SDCard is mounted\n        // using Environment.getExternalStorageState() before doing this.\n\n        File mediaStorageDir = new File(Environment.getExternalStoragePublicDirectory(\n                Environment.DIRECTORY_PICTURES), \"MyCameraApp\");\n        // This location works best if you want the created images to be shared\n        // between applications and persist after your app has been uninstalled.\n\n        // Create the storage directory if it does not exist\n        if (! mediaStorageDir.exists()){\n            if (! mediaStorageDir.mkdirs()){\n                Log.d(\"MyCameraApp\", \"failed to create directory\");\n                return null;\n            }\n        }\n\n        // Create a media file name\n        File mediaFile;\n\n        mediaFile = new File(mediaStorageDir.getPath() + File.separator +\n                    \"VID\" + \".mp4\");\n\n\n        return mediaFile;\n    }\n\n    void saveVideo()\n    {\n\n        String fileName=saveFileName.getText().toString();\n        if(fileName.equals(\"\"))\n        {\n            Toast.makeText(EditVideo.this, \"Enter New File Name\", Toast.LENGTH_SHORT).show();\n        }\n        else\n        {\n            try {\n                Uri u= getIntent().getData();\n                InputStream is = getContentResolver().openInputStream(u);\n\n                DataInputStream dis = new DataInputStream(is);\n\n                byte[] buffer = new byte[1024];\n                int length;\n\n                Uri dest;\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q)\n                {\n                    dest = MediaStore.Video.Media.getContentUri(MediaStore.VOLUME_EXTERNAL_PRIMARY);\n                }\n                else\n                {\n                    dest = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;\n                }\n\n                File dir= new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES),\"/Obstructy\");\n                if (! dir.exists())\n                {\n                    if (! dir.mkdirs())\n                    {\n                        return;\n                    }\n                    else\n                    {\n                        Log.d(\"myvid\", \"dir made at abs: \"+dir.getAbsolutePath() +\", w path: \"+dir.getPath() +\", w can path: \"+dir.getCanonicalPath());\n                    }\n                }\n                else\n                {\n                    Log.d(\"myvid\", \"dir existed at abs: \"+dir.getAbsolutePath() +\", w path: \"+dir.getPath()+\", w can path: \"+dir.getCanonicalPath());\n                }\n\n                File mFile=new File(dir.getAbsolutePath()+File.separator+ fileName +\".mp4\");\n\n                FileOutputStream fos = new FileOutputStream(mFile);\n\n                while ((length = dis.read(buffer))>0) {\n                    fos.write(buffer, 0, length);\n                }\n\n                bsheetSave.setState(BottomSheetBehavior.STATE_HIDDEN);\n                Toast.makeText(EditVideo.this, \"Saved Successfully\", Toast.LENGTH_SHORT).show();\n            } catch (MalformedURLException mue) {\n                Log.e(\"SYNC getUpdate\", \"malformed url error\", mue);\n            } catch (IOException ioe) {\n                Log.e(\"SYNC getUpdate\", \"io error\", ioe);\n            } catch (SecurityException se) {\n                Log.e(\"SYNC getUpdate\", \"security error\", se);\n            }\n        }\n    }\n\n    private void getDest() {\n        File dirUpr= new File(Environment.getExternalStoragePublicDirectory(\n                Environment.DIRECTORY_PICTURES),\"/Obstructy\");\n\n//            File dir=new File(dest.getPath(),\"/Obstructy\");\n        if (! dirUpr.exists()){\n            if (! dirUpr.mkdirs()){\n                Log.d(\"myvid\", \"failed to create directory\");\n                return;\n            }\n            else{\n                Log.d(\"myvid\", \"dir made at abs: \"+dirUpr.getAbsolutePath()\n                        +\", w path: \"+dirUpr.getPath());\n//                        +\", w can path: \"+dir.getCanonicalPath());\n            }\n        }\n        else{\n            Log.d(\"myvid\", \"dir existed at abs: \"+dirUpr.getAbsolutePath()\n                    +\", w path: \"+dirUpr.getPath());\n//                    +\", w can path: \"+dir.getCanonicalPath());\n        }\n\n        File dir=new File(Environment.getExternalStoragePublicDirectory(\n                Environment.DIRECTORY_PICTURES)+\"/Obstructy\",\"/Cropped\");\n\n        if (! dir.exists()){\n            if (! dir.mkdirs()){\n                Log.d(\"myvid\", \"failed to create directory\");\n                return;\n            }\n            else{\n                Log.d(\"myvid\", \"dir made at abs: \"+dir.getAbsolutePath()\n                        +\", w path: \"+dir.getPath());\n//                        +\", w can path: \"+dir.getCanonicalPath());\n            }\n        }\n        else{\n            Log.d(\"myvid\", \"dir existed at abs: \"+dir.getAbsolutePath()\n                    +\", w path: \"+dir.getPath());\n//                    +\", w can path: \"+dir.getCanonicalPath());\n        }\n\n        dest=dir.getAbsolutePath();\n\n    }\n\n    private void selectAudioFile() {\n\n        Intent i=new Intent(Intent.ACTION_PICK, MediaStore.Audio.Media.EXTERNAL_CONTENT_URI);\n        i.setType(\"audio/*\");\n        i.setAction(Intent.ACTION_GET_CONTENT);\n\n        startActivityForResult(i, 3360);\n\n    }\n\n    private void addAudio(){\n        manageDestNDirs();\n\n        cmd = new String[] {\"-i\", selectedVideoPath, \"-i\", auFilePath,\n                \"-c\", \"copy\", \"-map\", \"0:0\", \"-map\", \"1:0\",\n                \"-shortest\", _dest.getAbsolutePath()};\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        if (resultCode==RESULT_OK && requestCode==3360){\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n                Uri uri=data.getData();\n                auFilePath= getPath(getApplicationContext() ,uri );\n\n                String tmp=\"\";\n                StringTokenizer stok=new StringTokenizer(auFilePath, \"/\");\n\n                while (stok.hasMoreTokens())\n                    tmp=stok.nextToken();\n                Log.d(\"stok\", \"onActivityResult: \"+tmp);\n                TextView tv=findViewById(R.id.musicFile);\n                tv.setText(tmp);\n\n                try {\n                    soundCtrlr.reset();\n                    soundCtrlr.setDataSource(EditVideo.this, uri);\n                    soundCtrlr.prepare();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            else {\n                Log.d(\"add\", \"onActivityResult: Error, version issues...\");\n                finish();\n            }\n        }\n    }\n\n\n    private void trimVideo(int start, int stop, String filePrefix) {\n\n        manageDestNDirs();\n\n        dur=(stop-start)/1000;\n\n        cmd=new String[]{\"-ss\", \"\"+start/1000, \"-y\", \"-i\", selectedVideoPath, \"-t\", \"\"+(stop-start)/1000,\n                \"-vcodec\", \"mpeg4\", \"-b:v\", \"2097152\", \"-b:a\", \"48000\", \"-ac\", \"2\", \"-ar\", \"22050\",\n                _dest.getAbsolutePath()};\n    }\n\n    private void manageDestNDirs() {\n        File dirUpr= new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES),\"/Obstructy\");\n\n        if (! dirUpr.exists()){\n            if (! dirUpr.mkdirs())\n            {\n                return;\n            }\n            else\n            {\n                Log.d(\"myvid\", \"dir made at abs: \"+dirUpr.getAbsolutePath() +\", w path: \"+dirUpr.getPath());\n            }\n        }\n        else\n        {\n            Log.d(\"myvid\", \"dir existed at abs: \"+dirUpr.getAbsolutePath() +\", w path: \"+dirUpr.getPath());\n        }\n\n        File dir=new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES)+\"/Obstructy\",\"/Cropped\");\n\n        if (! dir.exists())\n        {\n            if (! dir.mkdirs())\n            {\n                return;\n            }\n            else\n            {\n                Log.d(\"myvid\", \"dir made at abs: \"+dir.getAbsolutePath()+\", w path: \"+dir.getPath());\n            }\n        }\n        else\n        {\n            Log.d(\"myvid\", \"dir existed at abs: \"+dir.getAbsolutePath() +\", w path: \"+dir.getPath());\n        }\n\n        String dt=(new SimpleDateFormat(\"yyyyMMdd_HHmmss\", Locale.getDefault())).format(new Date());\n        if(filePrefix.equals(\"\"))\n        {\n            _dest=new File(dir.getAbsolutePath(),dt+\".mp4\");\n        }\n        else\n        {\n            _dest=new File(dir.getAbsolutePath(),filePrefix+\".mp4\");\n        }\n    }\n\n    private String getOrgPathFrmUri(Context ctx, Uri uri)\n    {\n        Cursor c=null;\n\n        try {\n            String[] project = {MediaStore.Images.Media.DATA};\n\n            c = ctx.getContentResolver().query(uri, project, null, null, null);\n            int colIdx = c.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);\n            c.moveToFirst();\n\n            return c.getString(colIdx);\n        } catch (Exception e){\n            e.printStackTrace();\n            return \"\";\n        } finally {\n            if (c!=null)\n                c.close();\n        }\n\n    }\n\n\n    private String getFormattedTime(int dur)\n    {\n        int h=dur/3600,\n                rem=dur%3600,\n                min=rem/60,\n                sec=rem%60;\n\n        return String.format(\"%02d:\", h)+\n                String.format(\"%02d:\", min)+\n                String.format(\"%02d:\", sec);\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/huzaifa/obstructy/EditVideo.java	(revision 3ef69284f13331c641cf2aa51364854b88190a58)
+++ app/src/main/java/com/huzaifa/obstructy/EditVideo.java	(date 1608662196000)
@@ -743,8 +743,10 @@
         }
         else
         {
+            Toast.makeText(EditVideo.this, "toasting...", Toast.LENGTH_SHORT).show();
             try {
-                Uri u= getIntent().getData();
+                Toast.makeText(EditVideo.this, "toasting 0", Toast.LENGTH_SHORT).show();
+                Uri u= LoadVideo.uri;
                 InputStream is = getContentResolver().openInputStream(u);
 
                 DataInputStream dis = new DataInputStream(is);
@@ -752,6 +754,8 @@
                 byte[] buffer = new byte[1024];
                 int length;
 
+                Toast.makeText(EditVideo.this, "toasting...1", Toast.LENGTH_SHORT).show();
+
                 Uri dest;
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q)
                 {
@@ -779,6 +783,8 @@
                     Log.d("myvid", "dir existed at abs: "+dir.getAbsolutePath() +", w path: "+dir.getPath()+", w can path: "+dir.getCanonicalPath());
                 }
 
+                Toast.makeText(EditVideo.this, "toasting...2", Toast.LENGTH_SHORT).show();
+
                 File mFile=new File(dir.getAbsolutePath()+File.separator+ fileName +".mp4");
 
                 FileOutputStream fos = new FileOutputStream(mFile);
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 3ef69284f13331c641cf2aa51364854b88190a58)
+++ .idea/misc.xml	(date 1619084513000)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"PLATFORM\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"gradleJvm\" value=\"1.8\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 3ef69284f13331c641cf2aa51364854b88190a58)
+++ .idea/gradle.xml	(date 1619084084000)
@@ -15,6 +15,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1619084513000)
+++ .idea/compiler.xml	(date 1619084513000)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="1.8" />
+  </component>
+</project>
\ No newline at end of file
